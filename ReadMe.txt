Grid Cell Emergence in Goal-Oriented Learning: SR-SARSA vs SR-WVF
This repository contains the code and resources for our research into grid cell emergence through spatial navigation and goal-oriented learning. We compare a traditional Successor Representation (SR) model using SARSA, our baseline, with a novel World Value Function (WVF) approach. Our goal is to understand how goal-directed agents develop spatial representations, specifically grid cells, and how the WVF method enhances this process.

Repository Structure
gridworld.py: Defines the grid-world environment used for the experiments.
metrics.py: Contains functions to calculate performance metrics, which are logged and used in score plotting.
scorePlotter.py: Generates visualizations for the grid scores to compare SR-SARSA and SR-WVF approaches.

Main Experiment Files:
-------------------------------------------------------------------------------------------------------------
SRSARSA.py: Implements the baseline SR-SARSA model for comparison.
SRWVF.py: Implements the novel SR-WVF approach for exploring the role of World Value Functions in grid cell development.
-------------------------------------------------------------------------------------------------------------

utils.py: Utility functions used across the different scripts, including data processing and helper methods.
sarsa_grid_scores.csv: Stores grid scores generated by the SR-SARSA baseline.
wvf_grid_scores.csv: Stores grid scores generated by the SR-WVF approach.
SARSA.batch: Batch script for submitting SR-SARSA jobs to the Wits cluster.
WVF.batch: Batch script for submitting SR-WVF jobs to the Wits cluster.
plots/: Folder containing plot outputs for performance comparisons.
PreviousAttempts/: Archive of previous versions and attempts at the experiments.

Running Experiments:
To run these experiments on the Wits cluster, submit the appropriate batch file as a job:

SR-SARSA Baseline: Submit SARSA.batch to run the SR-SARSA baseline model.
SR-WVF Novel Approach: Submit WVF.batch to run the SR-WVF model.
These batch files are configured to handle job scheduling on the Wits cluster, allowing for automated execution of the experiments.

Results Analysis:
Use scorePlotter.py to visualize and compare the grid scores recorded in sarsa_grid_scores.csv and wvf_grid_scores.csv.
Metrics and plots provide insights into how each approach supports the development of grid cells in the agentâ€™s spatial navigation strategy.

Note: 
The plots currently in the plots folder are not the ones obtained in the final experiment, these were plotted while testing the code
so they are severaly under-trained. The final plots can be found under my profile on the Wits cluster.

Requirements:
- Python 3+
- Necessary packages: NumPy, Matplotlib, and Pandas, NeuralPlayground.

Footnote:
Portions of the work presented here have been submitted to Cosyne as an extended abstract